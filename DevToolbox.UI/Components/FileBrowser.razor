@using System.Windows.Forms

<div class="file-browser">
    <div class="input-group">
        <input type="text" class="form-control bg-dark text-light border-secondary" 
                value="@SelectedPath" 
                readonly 
                placeholder="Select a file or folder..."
                @onclick="OpenFileBrowser" />
        <button class="btn btn-outline-light" @onclick="OpenFileBrowser">
            <i class="bi bi-folder2-open"></i> Browse
        </button>
    </div>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
            @ErrorMessage
            <button type="button" class="btn-close" @onclick="() => ErrorMessage = string.Empty"></button>
        </div>
    }
    @if (ShowDialog)
    {
        <CustomFileBrowserDialog 
            InitialPath="@SelectedPath"
            Filter="@Filter"
            AllowFileSelection="@AllowFileSelection"
            AllowFolderSelection="@AllowFolderSelection"
            OnPathSelected="OnPathSelected"
            OnCanceled="OnDialogCanceled" />
    }
</div>

@code {
    [Parameter]
    public string SelectedPath { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> OnPathSelected { get; set; }

    [Parameter]
    public bool AllowFileSelection { get; set; } = true;

    [Parameter]
    public bool AllowFolderSelection { get; set; } = true;

    [Parameter]
    public string Filter { get; set; } = "All Files (*.*)|*.*";

    private string ErrorMessage { get; set; } = string.Empty;
    private bool ShowDialog { get; set; }

    private void OpenFileBrowser()
    {
        ShowDialog = true;
        StateHasChanged();
    }

    private async Task OnDialogCanceled()
    {
        ShowDialog = false;
        StateHasChanged();
    }
}